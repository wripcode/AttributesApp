interface Folder {
  readonly id: FolderId;
  readonly type: 'Folder';

  getName(): string;
  setName(name: string): undefined;
  getSlug(): string;
  setSlug(slug: string): undefined;
  getParent(): Promise<null | Folder>;
  setParent(parent: Folder): undefined;

  save(): Promise<undefined>;
  destroy(): undefined;
}

interface Page {
  readonly id: PageId;
  readonly type: 'Page';

  getName(): string;
  setName(name: string): undefined;
  getSlug(): string;
  setSlug(slug: string): undefined;
  getParent(): Promise<null | Folder>;
  setParent(parent: Folder): undefined;

  getTitle(): string;
  setTitle(title: string): undefined;
  getDescription(): string;
  setDescription(description: string): undefined;
  isDraft(): boolean;
  setDraft(isDraft: boolean): undefined;
  usesTitleAsOgTitle(): boolean;
  useTitleAsOgTitle(use: boolean): undefined;
  getOgTitle(): string;
  setOgTitle(title: string): undefined;
  usesDescriptionAsOgDescription(): boolean;
  useDescriptionAsOgDescription(use: boolean): undefined;
  getOgDescription(): string;
  setOgDescription(description: string): undefined;
  getOgImage(): string;
  setOgImage(url: string): undefined;
  isExcludedFromSearch(): boolean;
  excludeFromSearch(shouldExclude: boolean): undefined;
  usesTitleAsSearchTitle(): boolean;
  useTitleAsSearchTitle(use: boolean): undefined;
  getSearchTitle(): string;
  setSearchTitle(title: string): undefined;
  usesDescriptionAsSearchDescription(): boolean;
  useDescriptionAsSearchDescription(use: boolean): undefined;
  getSearchDescription(): string;
  setSearchDescription(description: string): undefined;
  usesOgImageAsSearchImage(): boolean;
  useOgImageAsSearchImage(use: boolean): undefined;
  getSearchImage(): string;
  setSearchImage(url: string): undefined;
  isPasswordProtected(): boolean;
  getUtilityPageKey(): null | string;
  isHomepage(): boolean;

  save(): Promise<undefined>;
  destroy(): undefined;
}

declare type FolderId = string;
declare type PageId = string;
