interface ColorVariable {
  readonly id: VariableId;
  readonly type: 'Color';
  getName(): Promise<null | string>;
  setName(newName: string): Promise<void>;
  set(value: ColorValue | ColorVariable): Promise<void>;
  get(): Promise<null | ColorValue | ColorVariable>;
  remove(): Promise<boolean>;
}

interface SizeVariable {
  readonly id: VariableId;
  readonly type: 'Size';
  getName(): Promise<null | string>;
  setName(newName: string): Promise<void>;
  set(value: SizeValue | SizeVariable): Promise<void>;
  get(): Promise<null | SizeValue | SizeVariable>;
  remove(): Promise<boolean>;
}

interface FontFamilyVariable {
  readonly id: VariableId;
  readonly type: 'FontFamily';
  getName(): Promise<null | string>;
  setName(newName: string): Promise<void>;
  set(value: FontFamilyValue | FontFamilyVariable): Promise<void>;
  get(): Promise<null | FontFamilyValue | FontFamilyVariable>;
  remove(): Promise<boolean>;
}

declare type Variable = ColorVariable | SizeVariable | FontFamilyVariable;

interface VariableCollection {
  readonly id: VariableCollectionId;
  getName(): Promise<null | string>;
  getVariable(id: VariableId): Promise<null | Variable>;
  getVariableByName(name: string): Promise<null | Variable>;
  getAllVariables(): Promise<Array<Variable>>;
  createColorVariable(
    name: string,
    value: string | ColorVariable
  ): Promise<null | ColorVariable>;
  createSizeVariable(
    name: string,
    value: SizeValue | SizeVariable
  ): Promise<null | SizeVariable>;
  createFontFamilyVariable(
    name: string,
    value: string | FontFamilyVariable
  ): Promise<null | FontFamilyVariable>;
}

declare type VariableCollectionId = string;
declare type VariableId = string;
declare type ColorValue = string;
declare type SizeValue = {value: number; unit: SizeUnit};
declare type FontFamilyValue = string;

declare type SizeUnit =
  | 'px'
  | 'em'
  | 'rem'
  | 'vh'
  | 'vw'
  | 'dvh'
  | 'dvw'
  | 'lvh'
  | 'lvw'
  | 'svh'
  | 'svw'
  | 'vmax'
  | 'vmin'
  | 'ch';
